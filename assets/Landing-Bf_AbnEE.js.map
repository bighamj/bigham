{"version":3,"file":"Landing-Bf_AbnEE.js","sources":["../../node_modules/@mui/material/esm/CardHeader/cardHeaderClasses.js","../../node_modules/@mui/material/esm/CardHeader/CardHeader.js","../../src/assets/smallme.webp","../../src/containers/Landing.jsx"],"sourcesContent":["import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardHeaderUtilityClass(slot) {\n  return generateUtilityClass('MuiCardHeader', slot);\n}\nconst cardHeaderClasses = generateUtilityClasses('MuiCardHeader', ['root', 'avatar', 'action', 'content', 'title', 'subheader']);\nexport default cardHeaderClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport composeClasses from '@mui/utils/composeClasses';\nimport Typography, { typographyClasses } from \"../Typography/index.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport cardHeaderClasses, { getCardHeaderUtilityClass } from \"./cardHeaderClasses.js\";\nimport useSlot from \"../utils/useSlot.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    avatar: ['avatar'],\n    action: ['action'],\n    content: ['content'],\n    title: ['title'],\n    subheader: ['subheader']\n  };\n  return composeClasses(slots, getCardHeaderUtilityClass, classes);\n};\nconst CardHeaderRoot = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    return [{\n      [`& .${cardHeaderClasses.title}`]: styles.title\n    }, {\n      [`& .${cardHeaderClasses.subheader}`]: styles.subheader\n    }, styles.root];\n  }\n})({\n  display: 'flex',\n  alignItems: 'center',\n  padding: 16\n});\nconst CardHeaderAvatar = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Avatar',\n  overridesResolver: (props, styles) => styles.avatar\n})({\n  display: 'flex',\n  flex: '0 0 auto',\n  marginRight: 16\n});\nconst CardHeaderAction = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Action',\n  overridesResolver: (props, styles) => styles.action\n})({\n  flex: '0 0 auto',\n  alignSelf: 'flex-start',\n  marginTop: -4,\n  marginRight: -8,\n  marginBottom: -4\n});\nconst CardHeaderContent = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Content',\n  overridesResolver: (props, styles) => styles.content\n})({\n  flex: '1 1 auto',\n  [`.${typographyClasses.root}:where(& .${cardHeaderClasses.title})`]: {\n    display: 'block'\n  },\n  [`.${typographyClasses.root}:where(& .${cardHeaderClasses.subheader})`]: {\n    display: 'block'\n  }\n});\nconst CardHeader = /*#__PURE__*/React.forwardRef(function CardHeader(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCardHeader'\n  });\n  const {\n    action,\n    avatar,\n    component = 'div',\n    disableTypography = false,\n    subheader: subheaderProp,\n    subheaderTypographyProps,\n    title: titleProp,\n    titleTypographyProps,\n    slots = {},\n    slotProps = {},\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    component,\n    disableTypography\n  };\n  const classes = useUtilityClasses(ownerState);\n  const externalForwardedProps = {\n    slots,\n    slotProps: {\n      title: titleTypographyProps,\n      subheader: subheaderTypographyProps,\n      ...slotProps\n    }\n  };\n  let title = titleProp;\n  const [TitleSlot, titleSlotProps] = useSlot('title', {\n    className: classes.title,\n    elementType: Typography,\n    externalForwardedProps,\n    ownerState,\n    additionalProps: {\n      variant: avatar ? 'body2' : 'h5',\n      component: 'span'\n    }\n  });\n  if (title != null && title.type !== Typography && !disableTypography) {\n    title = /*#__PURE__*/_jsx(TitleSlot, {\n      ...titleSlotProps,\n      children: title\n    });\n  }\n  let subheader = subheaderProp;\n  const [SubheaderSlot, subheaderSlotProps] = useSlot('subheader', {\n    className: classes.subheader,\n    elementType: Typography,\n    externalForwardedProps,\n    ownerState,\n    additionalProps: {\n      variant: avatar ? 'body2' : 'body1',\n      color: 'textSecondary',\n      component: 'span'\n    }\n  });\n  if (subheader != null && subheader.type !== Typography && !disableTypography) {\n    subheader = /*#__PURE__*/_jsx(SubheaderSlot, {\n      ...subheaderSlotProps,\n      children: subheader\n    });\n  }\n  const [RootSlot, rootSlotProps] = useSlot('root', {\n    ref,\n    className: classes.root,\n    elementType: CardHeaderRoot,\n    externalForwardedProps: {\n      ...externalForwardedProps,\n      ...other,\n      component\n    },\n    ownerState\n  });\n  const [AvatarSlot, avatarSlotProps] = useSlot('avatar', {\n    className: classes.avatar,\n    elementType: CardHeaderAvatar,\n    externalForwardedProps,\n    ownerState\n  });\n  const [ContentSlot, contentSlotProps] = useSlot('content', {\n    className: classes.content,\n    elementType: CardHeaderContent,\n    externalForwardedProps,\n    ownerState\n  });\n  const [ActionSlot, actionSlotProps] = useSlot('action', {\n    className: classes.action,\n    elementType: CardHeaderAction,\n    externalForwardedProps,\n    ownerState\n  });\n  return /*#__PURE__*/_jsxs(RootSlot, {\n    ...rootSlotProps,\n    children: [avatar && /*#__PURE__*/_jsx(AvatarSlot, {\n      ...avatarSlotProps,\n      children: avatar\n    }), /*#__PURE__*/_jsxs(ContentSlot, {\n      ...contentSlotProps,\n      children: [title, subheader]\n    }), action && /*#__PURE__*/_jsx(ActionSlot, {\n      ...actionSlotProps,\n      children: action\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? CardHeader.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The action to display in the card header.\n   */\n  action: PropTypes.node,\n  /**\n   * The Avatar element to display.\n   */\n  avatar: PropTypes.node,\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, `subheader` and `title` won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `title` text, and optional `subheader` text\n   * with the Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    action: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    avatar: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    content: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    subheader: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    title: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    action: PropTypes.elementType,\n    avatar: PropTypes.elementType,\n    content: PropTypes.elementType,\n    root: PropTypes.elementType,\n    subheader: PropTypes.elementType,\n    title: PropTypes.elementType\n  }),\n  /**\n   * The content of the component.\n   */\n  subheader: PropTypes.node,\n  /**\n   * These props will be forwarded to the subheader\n   * (as long as disableTypography is not `true`).\n   * @deprecated Use `slotProps.subheader` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   */\n  subheaderTypographyProps: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The content of the component.\n   */\n  title: PropTypes.node,\n  /**\n   * These props will be forwarded to the title\n   * (as long as disableTypography is not `true`).\n   * @deprecated Use `slotProps.title` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   */\n  titleTypographyProps: PropTypes.object\n} : void 0;\nexport default CardHeader;","export default \"__VITE_ASSET__BIEvN8Zi__\"","import Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport { useTheme } from \"@mui/material/styles\";\nimport CardHeader from \"@mui/material/CardHeader\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport Stack from \"@mui/material/Stack\";\nimport Typography from \"@mui/material/Typography\";\nimport { Fade, Pulse } from \"react-swift-reveal\";\nimport me from \"../assets/smallme.webp\";\n\nconst Landing = () => {\n  const color = useTheme().palette;\n\n  return (\n    <Fade>\n      {\" \"}\n      <Stack\n        spacing={4}\n        direction=\"row\"\n        sx={{\n          height: \"100vh\",\n          padding: \"20px\",\n          backgroundImage: `url(https://bigham-joshua-site.s3.us-east-1.amazonaws.com/bentwood.avif)`,\n          backgroundSize: \"cover\",\n          backgroundPosition: \"center\",\n        }}\n        justifyContent={\"center\"}\n        alignItems={\"center\"}\n        id=\"landing\"\n      >\n        <Card\n          sx={{\n            backgroundColor: \"rgba(255, 255, 255, 0.9)\",\n          }}\n        >\n          <CardHeader\n            title=\"Hello There, I'm Joshua Bigham\"\n            sx={{\n              backgroundColor: color.primary.main,\n              color: color.primary.contrastText,\n              textAlign: \"center\",\n            }}\n          />\n          <Pulse>\n            <CardMedia\n              component={\"img\"}\n              image={me}\n              title=\"Joshua Bigham\"\n              style={{\n                height: \"200px\",\n                width: \"200px\",\n                borderRadius: \"50%\",\n                margin: \"10px auto\",\n              }}\n            />\n          </Pulse>\n          <Fade>\n            <CardContent>\n              <Typography variant={\"h6\"} align={\"center\"}>\n                <b>Experienced Technical Product Manager </b>\n                with 10+ years of experience building scalable internal\n                platforms, developer tools, and data infrastructure. I’ve led\n                cross-functional teams to deliver systems that power real-time\n                analytics, automate complex workflows, and reduce operational\n                overhead across industries including AEC, lidar, and retail.\n              </Typography>\n            </CardContent>\n          </Fade>\n\n          <CardMedia image={me} title=\"Joshua Bigham\" />\n        </Card>\n      </Stack>\n    </Fade>\n  );\n};\n\nexport default Landing;\n"],"names":["getCardHeaderUtilityClass","slot","generateUtilityClass","cardHeaderClasses","generateUtilityClasses","useUtilityClasses","ownerState","classes","composeClasses","CardHeaderRoot","styled","props","styles","CardHeaderAvatar","CardHeaderAction","CardHeaderContent","typographyClasses","CardHeader","React.forwardRef","inProps","ref","useDefaultProps","action","avatar","component","disableTypography","subheaderProp","subheaderTypographyProps","titleProp","titleTypographyProps","slots","slotProps","other","externalForwardedProps","title","TitleSlot","titleSlotProps","useSlot","Typography","subheader","SubheaderSlot","subheaderSlotProps","RootSlot","rootSlotProps","AvatarSlot","avatarSlotProps","ContentSlot","contentSlotProps","ActionSlot","actionSlotProps","_jsx","_jsxs","me","Landing","color","useTheme","Fade","jsx","Stack","jsxs","Card","Pulse","CardMedia","CardContent"],"mappings":"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","x_google_ignoreList":[0,1]}